#!/usr/bin/env perl

use strict;

sub check {
  my ( $sha1 ) = @_;
  my $filename = 'test_vectors/' . ${sha1};
  unless ( -e $filename ) {
      print STDERR "$0: $sha1 not found, failing test.\n";
      exit 1;
  }

  print STDERR "Checking $sha1... ";
  my $decoded_sha1 = (split ' ', `./decode-to-stdout $filename 2>&1 | sha1sum` )[ 0 ];
  if ( $decoded_sha1 ne $sha1 ) {
    print STDERR "$0: decoding mismatch: expected $sha1, got $decoded_sha1\n";
    exit( 1 );
  }
  print STDERR "success.\n";
};

check( '04b68b0a642d8285303d2b8884fc374e09d28ae9' );
check( '075d4eb18cbb2885d57eae5201cafb54bc43acca' );
check( '07b5eb1e9741d90027c46166eaaff566c6bf934f' );
check( '0b546dad90ddefea5085c7751b5fa2f117630b1c' );
check( '0ccf971d82e0e868484f2b30d60f56785453e768' );
check( '18c94ac52ca99bc3fc1521d30bf997e4d6657b51' );
check( '1c75bf5cac928aef275d623040554d0f4cc7a3e8' );
check( '2a4c049c2f8e3a19ee39ffd7074cecd68006a101' );
check( '353ee97f6cc145f43be2f67c893ec0347d822cc1' );
check( '4456925bdfd3492958ef7f884428b5c070b24bd5' );
check( '45502fe01a62b82d498b83dc50824741402436db' );
check( '48e475e2af456452f6258b8fe2882db6448086fc' );
check( '4ebefe3c504e95db1be41f28d5357059519ea371' );
check( '4f89bc5b3811ffc64975dc86a7087f6bed6fa297' );
check( '4fca93f3956d6e0ccd6ee6d370a1dfeb2be4c996' );
check( '503596b5a15a732da60243d0a67fa13884771efc' );
check( '513f3ab8cc3baffae5bcd75d102b98df8cd3312d' );
check( '590561acb2fcfdb46db9842b185da30af7a3dd03' );
check( '6381d3149f5145212bba92c090f444d341101942' );
check( '675cd7e88ebb28e4bcd2bf414bb288f44e4edc7f' );
check( '7d865ecf465b5883180fb6d327ada6de110a2fd0' );
check( '89ca6f0ce420bb63e5c621d0711beae551a51eef' );
check( '8bf4c5bb27fd7ee378fee0eb46013b8f004469af' );
check( '8e2f9c93cad193f0a26dd04dc46ac3dc45c5a041' );
check( '9038efedf99ce6a279db7386f8b492bdba30dee6' );
check( '95584facca028262893867ee52d20f7831407040' );
check( '9a9e1e3602d48715c9a9f4204d73885c401dbb0f' );
check( '9b233ad3682e91cd01b17af30d8d53d1d5f3a928' );
check( 'a4dace04a77fc9f969a8d7a645c99c0271f1f73e' );
check( 'a61782d062ed13ca22b98ffa29feb575bfb97ce9' );
check( 'a6ad4fd7834174f06f94f6bde70f3923103cdcb9' );
check( 'a82d97046361ff6467a2297c33aff4a14872e6b8' );
check( 'ac11b3f6d50d743f713f7870b7202533f0eb2393' );
check( 'ad04fe4122ec4bc02a893f6da48d3158ab1838e0' );
check( 'b1f51b2cb78073e675bf763436af39c3785972a2' );
check( 'b942a29bf527d06aa13ffcef089faa7fce75bd5c' );
check( 'ba8432e30609fe1c59e02c052e196e0c3e2ca471' );
check( 'c401f35bb38fb2d10b486618ddb61e6df560bec4' );
check( 'c4824e97501131b5d5b12628bc163f263b1794da' );
check( 'ced8ea722f3471fc0fed7de6148683a543ade151' );
check( 'd1e7b447642b76121f45c2511bc8315f6b997207' );
check( 'd4e9f670c4df95d60d0bc95f393d1decda4dbca1' );
check( 'd688f0a9f471d3107465b009a998fd68a9d281ae' );
check( 'dbdd07032180b63689fc0475cdfac1ed927cd253' );
check( 'de0dc731cd03f1a523a4f8477326d5030f26307e' );
check( 'df225756c61e0dd77404c3f4a033624f0ad35a55' );
check( 'e01c6f92f23eefecb1e120230a2c4b2767cce066' );
check( 'e1230f8fa11ac592e34689d32cb6b0532fe627fc' );
check( 'e3bc5f0cddad4d30ed53283788dd97a743c51959' );
check( 'e508817f07a0e910e68a49d5fab449bf6bfd7479' );
check( 'ea6ba2499a47208ee6393d164d5447c1649cf285' );
check( 'eeeb9bf9e0fbcf543da64ad6353c6500534ccef7' );
check( 'ff2941dde20090835032c32c0644b6d401610c57' );

print STDERR "$0: all tests passed\n";

exit 0;
